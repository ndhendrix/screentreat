# as within this run's folder
############################################################
# Define a little function to do version tracking
track_version = function(version_info, filename) {
if (file.exists(filename)) {
tmp = read.csv(filename, header=TRUE)
if (!version_info$version%in%tmp$version) {
write.table(version_info,
filename,
sep=",",
append=TRUE,
row.names=FALSE,
col.names=FALSE)
}
} else write.table(version_info, filename, sep=",", row.names=FALSE)
}
# Compile information
vinfo = data.frame(version=model_version,
t(data.frame(model_description)),
row.names=NULL)
# Save info in master version file
track_version(vinfo,
file.path(rootdir, model_type,
'version_guide.csv'))
# Save within this run's folder
write.csv(t(vinfo), file.path(base_path,  model_version, 'model_info.csv'))
############################################################
# store code within this run's input folder
############################################################
file.copy(file.path(base_path, input_data_file),
file.path(base_path, model_version, 'input', 'input.csv'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'wrapper.R'),
file.path(base_path, model_version, 'input', 'wrapper.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'run_file.R'),
file.path(base_path, model_version, 'input', 'run_file.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', user_options_file),
file.path(base_path, model_version, 'input', 'user_options.R'),
overwrite=TRUE)
############################################################
# run the model
############################################################
setwd(file.path(rootdir, model_type, 'code'))
if (run) source(user_options_file)
?paste0
#############################################################################
## File Name: wrapper_screentreat.R
## File Purpose: Run screening-with-treatment model, saving input code and data so
## results can be reproduced, and saving metadata about the model run
## Author: Jeanette Birnbaum and Leslie Mallinger
## Date: 6/12/2013
## Edited on:6/21/2013
## Additional Comments:
## Process is as follows:
## 1. Edit [area folder, e.g. diagnostics]/code/user_options_master.r
## 2. Edit the "model run info" section of this file,
##    model_run_wrapper.r, to describe the model chosen in #1
## 3. Open a new instance of R from here, and source this file. (This
##    is because the initial working directory is assumed to be
##    [area folder, e.g. diagnostics]/code)
#############################################################################
# Empty the workspace
rm(list=ls())
# EDIT THIS SECTION:
############################################################
# model run information
############################################################
# What is the name of the user options file associated with
# this wrapper file? Location is presumed to be in [area]/code,
# e.g. diagnostics/code
user_options_file = 'user_optionsSensitivity.R'
input_data_file = 'HypotheticalSensitivity.csv'
# Should a copy of the input dataset be stored in the model folder?
# It will be named input_data.csv, so describe it below in
# model_description
copy_data = TRUE
# Establish model folders and describe the model
model_type = 'screentreat'
model_version = 'breast_ER-HER2_6Sensitivity'
model_description = c(#data='ademuyiwa_real_2',
data='mostly JNCI monograph',
sampling='N/A',
model_method='15% abd 50% stage shift, instage benefits of .5, .7, .9 for advanced and early stages (independent), Weibull mortality distribution',
design='Treatments get .25, .5, .75, and 1 as HR',
stage='early and advanced',
prognostic_factors='none',
treatments='made up',
efficacies='.25, .5, .75, 1',
life_table='BMD',
other='like _4 and _5 but with no lead time and new format for outputs')
# Do you want to actually run the model now, or
# do everything in this file except run the model?
run = TRUE
# THE FOLLOWING SECTIONS SHOULD NOT NEED EDITING:
using_wrapper=TRUE
############################################################
# directory setup
############################################################
setwd('~')
if (grepl('jbirnbau', getwd())) rootdir <- getwd()
if (grepl('jeanette', getwd())) rootdir <- file.path(getwd(), 'Documents', 'jbirnbau')
if (grepl('Elan', getwd())) rootdir <- file.path(getwd(), 'GitHub')
if (grepl('emarkowi', getwd())) rootdir <- getwd()
base_path <- file.path(rootdir, model_type, 'examples')
############################################################
# create directories if this is a new model run
############################################################
# Look for directory to evaluate whether we need to create folders
create_dirs = tryCatch({dir.create(file.path(base_path, model_version))},
warning=function(w) FALSE)
if (create_dirs) {
dir.create(file.path(base_path, model_version, 'input'))
dir.create(file.path(base_path, model_version, 'output'))
}
############################################################
# record model description in a master file as well
# as within this run's folder
############################################################
# Define a little function to do version tracking
track_version = function(version_info, filename) {
if (file.exists(filename)) {
tmp = read.csv(filename, header=TRUE)
if (!version_info$version%in%tmp$version) {
write.table(version_info,
filename,
sep=",",
append=TRUE,
row.names=FALSE,
col.names=FALSE)
}
} else write.table(version_info, filename, sep=",", row.names=FALSE)
}
# Compile information
vinfo = data.frame(version=model_version,
t(data.frame(model_description)),
row.names=NULL)
# Save info in master version file
track_version(vinfo,
file.path(rootdir, model_type,
'version_guide.csv'))
# Save within this run's folder
write.csv(t(vinfo), file.path(base_path,  model_version, 'model_info.csv'))
############################################################
# store code within this run's input folder
############################################################
file.copy(file.path(base_path, input_data_file),
file.path(base_path, model_version, 'input', 'input.csv'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'wrapper.R'),
file.path(base_path, model_version, 'input', 'wrapper.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'run_file.R'),
file.path(base_path, model_version, 'input', 'run_file.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', user_options_file),
file.path(base_path, model_version, 'input', 'user_options.R'),
overwrite=TRUE)
############################################################
# run the model
############################################################
setwd(file.path(rootdir, model_type, 'code'))
if (run) source(user_options_file)
#############################################################################
## File Name: wrapper_screentreat.R
## File Purpose: Run screening-with-treatment model, saving input code and data so
## results can be reproduced, and saving metadata about the model run
## Author: Jeanette Birnbaum and Leslie Mallinger
## Date: 6/12/2013
## Edited on:6/21/2013
## Additional Comments:
## Process is as follows:
## 1. Edit [area folder, e.g. diagnostics]/code/user_options_master.r
## 2. Edit the "model run info" section of this file,
##    model_run_wrapper.r, to describe the model chosen in #1
## 3. Open a new instance of R from here, and source this file. (This
##    is because the initial working directory is assumed to be
##    [area folder, e.g. diagnostics]/code)
#############################################################################
# Empty the workspace
rm(list=ls())
# EDIT THIS SECTION:
############################################################
# model run information
############################################################
# What is the name of the user options file associated with
# this wrapper file? Location is presumed to be in [area]/code,
# e.g. diagnostics/code
user_options_file = 'user_optionsSensitivity.R'
input_data_file = 'HypotheticalSensitivity.csv'
# Should a copy of the input dataset be stored in the model folder?
# It will be named input_data.csv, so describe it below in
# model_description
copy_data = TRUE
# Establish model folders and describe the model
model_type = 'screentreat'
model_version = 'breast_ER-HER2_6Sensitivity'
model_description = c(#data='ademuyiwa_real_2',
data='mostly JNCI monograph',
sampling='N/A',
model_method='15% abd 50% stage shift, instage benefits of .5, .7, .9 for advanced and early stages (independent), Weibull mortality distribution',
design='Treatments get .25, .5, .75, and 1 as HR',
stage='early and advanced',
prognostic_factors='none',
treatments='made up',
efficacies='.25, .5, .75, 1',
life_table='BMD',
other='like _4 and _5 but with no lead time and new format for outputs')
# Do you want to actually run the model now, or
# do everything in this file except run the model?
run = TRUE
# THE FOLLOWING SECTIONS SHOULD NOT NEED EDITING:
using_wrapper=TRUE
############################################################
# directory setup
############################################################
setwd('~')
if (grepl('jbirnbau', getwd())) rootdir <- getwd()
if (grepl('jeanette', getwd())) rootdir <- file.path(getwd(), 'Documents', 'jbirnbau')
if (grepl('Elan', getwd())) rootdir <- file.path(getwd(), 'GitHub')
if (grepl('emarkowi', getwd())) rootdir <- getwd()
base_path <- file.path(rootdir, model_type, 'examples')
############################################################
# create directories if this is a new model run
############################################################
# Look for directory to evaluate whether we need to create folders
create_dirs = tryCatch({dir.create(file.path(base_path, model_version))},
warning=function(w) FALSE)
if (create_dirs) {
dir.create(file.path(base_path, model_version, 'input'))
dir.create(file.path(base_path, model_version, 'output'))
}
############################################################
# record model description in a master file as well
# as within this run's folder
############################################################
# Define a little function to do version tracking
track_version = function(version_info, filename) {
if (file.exists(filename)) {
tmp = read.csv(filename, header=TRUE)
if (!version_info$version%in%tmp$version) {
write.table(version_info,
filename,
sep=",",
append=TRUE,
row.names=FALSE,
col.names=FALSE)
}
} else write.table(version_info, filename, sep=",", row.names=FALSE)
}
# Compile information
vinfo = data.frame(version=model_version,
t(data.frame(model_description)),
row.names=NULL)
# Save info in master version file
track_version(vinfo,
file.path(rootdir, model_type,
'version_guide.csv'))
# Save within this run's folder
write.csv(t(vinfo), file.path(base_path,  model_version, 'model_info.csv'))
############################################################
# store code within this run's input folder
############################################################
file.copy(file.path(base_path, input_data_file),
file.path(base_path, model_version, 'input', 'input.csv'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'wrapper.R'),
file.path(base_path, model_version, 'input', 'wrapper.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'run_file.R'),
file.path(base_path, model_version, 'input', 'run_file.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', user_options_file),
file.path(base_path, model_version, 'input', 'user_options.R'),
overwrite=TRUE)
############################################################
# run the model
############################################################
setwd(file.path(rootdir, model_type, 'code'))
if (run) source(user_options_file)
warnings()
treat_file
#############################################################################
## File Name: wrapper_screentreat.R
## File Purpose: Run screening-with-treatment model, saving input code and data so
## results can be reproduced, and saving metadata about the model run
## Author: Jeanette Birnbaum and Leslie Mallinger
## Date: 6/12/2013
## Edited on:6/21/2013
## Additional Comments:
## Process is as follows:
## 1. Edit [area folder, e.g. diagnostics]/code/user_options_master.r
## 2. Edit the "model run info" section of this file,
##    model_run_wrapper.r, to describe the model chosen in #1
## 3. Open a new instance of R from here, and source this file. (This
##    is because the initial working directory is assumed to be
##    [area folder, e.g. diagnostics]/code)
#############################################################################
# Empty the workspace
rm(list=ls())
# EDIT THIS SECTION:
############################################################
# model run information
############################################################
# What is the name of the user options file associated with
# this wrapper file? Location is presumed to be in [area]/code,
# e.g. diagnostics/code
user_options_file = 'user_options6.R'
input_data_file = 'input_temp_ERHER2_withAI_Ynames_EarlyOnly.csv'
# Should a copy of the input dataset be stored in the model folder?
# It will be named input_data.csv, so describe it below in
# model_description
copy_data = TRUE
# Establish model folders and describe the model
model_type = 'screentreat'
model_version = 'breast_ER-HER2_6EarlyTxOnly'
model_description = c(#data='ademuyiwa_real_2',
data='mostly JNCI monograph',
sampling='N/A',
model_method='15% stage shift',
design='no advanced treatments',
stage='early and advanced',
prognostic_factors='none',
treatments='all',
efficacies='',
life_table='BMD',
other='like _4 and _5 but with no lead time and new format for outputs')
# Do you want to actually run the model now, or
# do everything in this file except run the model?
run = TRUE
# THE FOLLOWING SECTIONS SHOULD NOT NEED EDITING:
using_wrapper=TRUE
############################################################
# directory setup
############################################################
setwd('~')
if (grepl('jbirnbau', getwd())) rootdir <- getwd()
if (grepl('jeanette', getwd())) rootdir <- file.path(getwd(), 'Documents', 'jbirnbau')
if (grepl('Elan', getwd())) rootdir <- file.path(getwd(), 'GitHub')
if (grepl('emarkowi', getwd())) rootdir <- getwd()
base_path <- file.path(rootdir, model_type, 'examples')
############################################################
# create directories if this is a new model run
############################################################
# Look for directory to evaluate whether we need to create folders
create_dirs = tryCatch({dir.create(file.path(base_path, model_version))},
warning=function(w) FALSE)
if (create_dirs) {
dir.create(file.path(base_path, model_version, 'input'))
dir.create(file.path(base_path, model_version, 'output'))
}
############################################################
# record model description in a master file as well
# as within this run's folder
############################################################
# Define a little function to do version tracking
track_version = function(version_info, filename) {
if (file.exists(filename)) {
tmp = read.csv(filename, header=TRUE)
if (!version_info$version%in%tmp$version) {
write.table(version_info,
filename,
sep=",",
append=TRUE,
row.names=FALSE,
col.names=FALSE)
}
} else write.table(version_info, filename, sep=",", row.names=FALSE)
}
# Compile information
vinfo = data.frame(version=model_version,
t(data.frame(model_description)),
row.names=NULL)
# Save info in master version file
track_version(vinfo,
file.path(rootdir, model_type,
'version_guide.csv'))
# Save within this run's folder
write.csv(t(vinfo), file.path(base_path,  model_version, 'model_info.csv'))
############################################################
# store code within this run's input folder
############################################################
file.copy(file.path(base_path, input_data_file),
file.path(base_path, model_version, 'input', 'input.csv'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'wrapper.R'),
file.path(base_path, model_version, 'input', 'wrapper.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', 'run_file.R'),
file.path(base_path, model_version, 'input', 'run_file.R'),
overwrite=TRUE)
file.copy(file.path(rootdir, model_type, 'code', user_options_file),
file.path(base_path, model_version, 'input', 'user_options.R'),
overwrite=TRUE)
############################################################
# run the model
############################################################
setwd(file.path(rootdir, model_type, 'code'))
############################################################################
## File Name: user_options.R
## File Purpose: Specify inputs for run_file.R
## Author: Jeanette Birnbaum
## Date: 10/14/2014
## Edited on:
## Additional Comments:
#############################################################################
############################################################
# Establish model version if this file is not being called
# by a wrapper
############################################################
# TODO
if (!'using_wrapper'%in%ls()) {
warning('Empyting the workspace')
rm(list=ls())
model_version <- 'breast_ER-HER2_6'
base_path <- '~/screentreat/examples'
}
############################################################
# Input data files
############################################################
treat_file = file.path(base_path, model_version, 'input', 'input.csv')
incidence_file = file.path(rootdir, '/screentreat/data/bc_1975-1979_incidence.csv')
library_file = file.path(rootdir, '/screentreat/code/screentreat_library.R')
#life_table_file = '~/cantrance/diagnostics/data/life_table_Reed2012.csv'
############################################################
# Simulation features
############################################################
nsim = 2
times = c(10,25)
pop_size = 5000
study_year = 2000
############################################################
# Population features
############################################################
pop_chars =
list(age=data.frame(age=c(50), prop=c(1)),
male=data.frame(male=c(0), prop=c(1)))
# Is age in the data age at clinical incidence?
# If not, provide incidence table
age_is_ageclin = FALSE
if (!age_is_ageclin) {
inc_table = read.csv(incidence_file, header=TRUE,
stringsAsFactors=FALSE)
}
############################################################
# Screening, treatment and cancer mortality
############################################################
# Stage shift
HR_advanced = 0.5
# within stage effects
instage_screen_benefit_early = 1
instage_screen_benefit_advanced = 1
# Add lead time? Default is undefined or FALSE
# If true, add mean lead time in years
lead_time = FALSE
if (lead_time) lt_mean = (40/12)
# Treatment HRs and distributions by subgroup-stage
treat_chars = read.csv(treat_file, header=TRUE,
stringsAsFactors=FALSE)
# Survival distribuion: exponential or weibull?
surv_distr = 'exponential'
# Baseline mortality rates and population proportions by
# subgroup-stages. Subgroup stages specified here must
# match those given in the scrtrt_file
control_notreat = data.frame(stage=c(rep('Early',4),
rep('Advanced',4)),
subgroup=rep(c('ER+HER2+',
'ER+HER2-',
'ER-HER2+',
'ER-HER2-'),2),
mortrate=c(rep(.01992,4),rep(0.10693, 4)),
prop=c(0.04, 0.38, 0.02, 0.06,
0.06, 0.34, 0.03, 0.07))
############################################################
# Other-cause mortality
############################################################
ocd_HR = 1
############################################################
# Run model
############################################################
source(library_file)
library(cantrance)
set.seed(98103)
############################################################
# Prepare inputs
############################################################
cat('\nPreparing inputs...')
# Identify the trial arms
trials <- gsub('prop_','',
grep('prop', colnames(treat_chars), value=TRUE))
# Identify subgroups
subgroups <- as.character(unique(control_notreat$subgroup))
# Prepare numeric and text group IDs:
# First for stage-subgroups (SS)
control_notreat <- transform(control_notreat,
SSno=1:nrow(control_notreat),
SSid=paste(stage, subgroup,
sep='.'))
treat_chars <- transform(treat_chars,
SSid=paste(stage, subgroup, sep='.'))
treat_chars <- merge(treat_chars,
subset(control_notreat,
select=-c(stage, subgroup)),
by='SSid',
all.x=TRUE, sort=FALSE)
# Now for treatment-stage-subgroups
treat_chars <- transform(treat_chars,
txSSid=paste(SSid,tx,sep='.'),
txSSno=1:nrow(treat_chars))
treat_chars
restart()
